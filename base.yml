version: '3.7'

services:
  # Mainflux services
  users:
    image: mainflux/users:0.10.0
    env_file: './env.d/mainflux-users.env'
    depends_on:
      - users-db

  things:
    image: mainflux/things:0.10.0
    env_file: './env.d/mainflux-things.env'
    depends_on:
      - things-db
      - users

  authn:
    image: mainflux/authn:0.10.0
    env_file: './env.d/mainflux-authn.env'
    depends_on:
      - authn-db

  # KNoT Fog Core
  babeltower:
    image: cesarbr/knot-babeltower
    env_file: './env.d/knot-babeltower.env'
    depends_on:
      - rabbitmq
      - users
      - things

  storage:
    image: cesarbr/knot-cloud-storage
    env_file: './env.d/knot-cloud-storage.env'
    depends_on:
      - mongo

  # External dependencies: database, tracing, message broker, load balancer.
  things-redis:
    image: redis:5.0-alpine
    deploy:
      resources:
        limits:
          memory: 300M

  es-redis:
    image: redis:5.0-alpine
    deploy:
      resources:
        limits:
          memory: 300M

  things-db:
    image: postgres:9.6.17-alpine
    env_file: './env.d/mainflux-things.env'
    volumes:
      - mainflux-things-db-volume:/var/lib/postgresql/data

  users-db:
    image: postgres:9.6.17-alpine
    env_file: './env.d/mainflux-users.env'
    volumes:
      - mainflux-users-db-volume:/var/lib/postgresql/data

  authn-db:
    image: postgres:9.6.17-alpine
    env_file: './env.d/mainflux-authn.env'
    volumes:
      - mainflux-authn-db-volume:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq
    env_file: './env.d/rabbitmq.env'

  jaeger:
    image: jaegertracing/all-in-one:1.13
    env_file: './env.d/mainflux-jaeger.env'
    deploy:
      replicas: 1

  mongo:
    image: mongo
    volumes:
      - mongo-data:/data/db
    deploy:
      resources:
        limits:
          memory: 300M

  traefik:
    image: traefik:v2.2
    command: >
      traefik
        --providers.docker
        --providers.docker.watch
        --providers.docker.swarmMode
        --providers.docker.exposedByDefault=false
        --entrypoints.http.address=:80
        --entrypoints.broker.address=:5672
    ports:
      - '80:80'
      - '5672:5672'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: global

volumes:
  mainflux-things-db-volume:
  mainflux-users-db-volume:
  mainflux-authn-db-volume:
  mongo-data:
